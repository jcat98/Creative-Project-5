[{"/usr/share/caddy/learning-mongo/lesson3/front-end/src/index.js":"1","/usr/share/caddy/learning-mongo/lesson3/front-end/src/App.js":"2","/usr/share/caddy/learning-mongo/lesson3/front-end/src/reportWebVitals.js":"3","/usr/share/caddy/learning-mongo/lesson3/front-end/src/pages/Layout.js":"4","/usr/share/caddy/learning-mongo/lesson3/front-end/src/pages/Rant.js":"5","/usr/share/caddy/learning-mongo/lesson3/front-end/src/pages/Feed.js":"6","/usr/share/caddy/learning-mongo/lesson3/front-end/src/pages/Users.js":"7","/usr/share/caddy/Creative-Project-4/front-end/src/index.js":"8","/usr/share/caddy/Creative-Project-4/front-end/src/App.js":"9","/usr/share/caddy/Creative-Project-4/front-end/src/reportWebVitals.js":"10","/usr/share/caddy/Creative-Project-4/front-end/src/pages/Layout.js":"11","/usr/share/caddy/Creative-Project-4/front-end/src/pages/Feed.js":"12","/usr/share/caddy/Creative-Project-4/front-end/src/pages/Rant.js":"13","/usr/share/caddy/Creative-Project-4/front-end/src/pages/Users.js":"14","/usr/share/caddy/Creative-Project-4/front-end/src/pages/Footer.js":"15","/usr/share/caddy/Creative-Project-5/front-end/src/index.js":"16","/usr/share/caddy/Creative-Project-5/front-end/src/App.js":"17","/usr/share/caddy/Creative-Project-5/front-end/src/reportWebVitals.js":"18","/usr/share/caddy/Creative-Project-5/front-end/src/pages/Layout.js":"19","/usr/share/caddy/Creative-Project-5/front-end/src/pages/Feed.js":"20","/usr/share/caddy/Creative-Project-5/front-end/src/pages/Rant.js":"21","/usr/share/caddy/Creative-Project-5/front-end/src/pages/Users.js":"22","/usr/share/caddy/Creative-Project-5/front-end/src/pages/Footer.js":"23","/usr/share/caddy/Creative-Project-5/front-end/src/pages/Home.js":"24","/usr/share/caddy/Creative-Project-5/front-end/src/pages/Reservations.js":"25"},{"size":535,"mtime":1668812810218,"results":"26","hashOfConfig":"27"},{"size":649,"mtime":1668830661137,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1668812810218,"results":"29","hashOfConfig":"27"},{"size":836,"mtime":1668831751289,"results":"30","hashOfConfig":"27"},{"size":2845,"mtime":1668899923977,"results":"31","hashOfConfig":"27"},{"size":2346,"mtime":1668899910385,"results":"32","hashOfConfig":"27"},{"size":3177,"mtime":1668897996121,"results":"33","hashOfConfig":"27"},{"size":535,"mtime":1668812810218,"results":"34","hashOfConfig":"35"},{"size":649,"mtime":1668830661137,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":1668812810218,"results":"37","hashOfConfig":"35"},{"size":836,"mtime":1668831751289,"results":"38","hashOfConfig":"35"},{"size":2529,"mtime":1670428617799,"results":"39","hashOfConfig":"35"},{"size":2907,"mtime":1668901914586,"results":"40","hashOfConfig":"35"},{"size":3239,"mtime":1668902036462,"results":"41","hashOfConfig":"35"},{"size":239,"mtime":1668902075558,"results":"42","hashOfConfig":"35"},{"size":535,"mtime":1668812810218,"results":"43","hashOfConfig":"44"},{"size":681,"mtime":1670564644186,"results":"45","hashOfConfig":"44"},{"size":362,"mtime":1668812810218,"results":"46","hashOfConfig":"44"},{"size":993,"mtime":1670564645846,"results":"47","hashOfConfig":"44"},{"size":2529,"mtime":1670428617799,"results":"48","hashOfConfig":"44"},{"size":2907,"mtime":1668901914586,"results":"49","hashOfConfig":"44"},{"size":3239,"mtime":1670564646462,"results":"50","hashOfConfig":"44"},{"size":239,"mtime":1670564645470,"results":"51","hashOfConfig":"44"},{"size":325,"mtime":1670564645654,"results":"52","hashOfConfig":"44"},{"size":9250,"mtime":1670564646262,"results":"53","hashOfConfig":"44"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"iiio1k",{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"9x724i",{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8bld8z",{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/usr/share/caddy/learning-mongo/lesson3/front-end/src/index.js",[],[],[],"/usr/share/caddy/learning-mongo/lesson3/front-end/src/App.js",["136"],[],"\nimport ReactDOM from \"react-dom/client\";\nimport { BrowserRouter, Routes, Route, Navigate } from \"react-router-dom\";\nimport Layout from \"./pages/Layout\";\nimport Feed from \"./pages/Feed\";\nimport Rant from \"./pages/Rant\";\nimport Users from \"./pages/Users\";\n\nexport default function App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route index element={<Feed />} />\n          <Route path=\"rant\" element={<Rant />} />\n          <Route path=\"users\" element={<Users />} />\n          <Route path=\"*\" element={<Navigate to=\"/\" />}  />\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  );\n}","/usr/share/caddy/learning-mongo/lesson3/front-end/src/reportWebVitals.js",[],[],"/usr/share/caddy/learning-mongo/lesson3/front-end/src/pages/Layout.js",[],[],"/usr/share/caddy/learning-mongo/lesson3/front-end/src/pages/Rant.js",["137","138"],[],"import { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport axios from 'axios';\nimport './Rant.css';\n\nconst Rant =() => {\n  // setup state\n  const [rants, setRants] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [problem, setProblem] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [place, setPlace] = useState(\"\");\n  const [users, setUsers] = useState([]);\n\n  const fetchRants = async() => {\n    try {      \n      const response = await axios.get(\"/api/rants\");\n      setRants(response.data.rants);\n    } catch(error) {\n      setError(\"error retrieving rants: \" + error);\n    }\n  }\n  const createRant = async() => {\n    try {\n      await axios.post(\"/api/rants\", {problem: problem, username: username, place: place});\n    } catch(error) {\n      setError(\"error adding a rant: \" + error);\n    }\n  }\n  const deleteOneRant = async(rant) => {\n    try {\n      await axios.delete(\"/api/rants/\" + rant.id);\n    } catch(error) {\n      setError(\"error deleting a rant\" + error);\n    }\n  }\n  \n  const fetchUsers = async() => {\n    try {      \n      const response = await axios.get(\"/api/users\");\n      setUsers(response.data.users);\n    } catch(error) {\n      setError(\"error retrieving users: \" + error);\n    }\n  }\n\n  // fetch ticket data\n  useEffect(() => {\n    fetchRants();\n    fetchUsers();\n  },[]);\n\n  const addRant = async(e) => {\n    e.preventDefault();\n    await createRant();\n    fetchRants();\n    setProblem(\"\");\n    setUsername(\"\");\n    setPlace(\"\");\n  }\n\n  const deleteRant = async(rant) => {\n    await deleteOneRant(rant);\n    fetchRants();\n  }\n\n  // render results\n  return (\n    <div className=\"container\">\n        <div className=\"App\">\n            {error}\n            <h1>Create a Rant</h1>\n            <form onSubmit={addRant}>\n            <Card>\n                <Card.Header>Rant</Card.Header>\n                <Card.Body>\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                            <Form.Control as=\"textarea\" rows={3}  value={problem} onChange={e=>setProblem(e.target.value)}/>\n                        </Form.Group>\n                        <Form.Select aria-label=\"Default select example\" onChange={e=>setUsername(e.target.value)}>\n                          <option>Select User</option>\n                          {users.map( user => (\n                            <option value={user.username}>{user.username}</option>\n                          ))}\n                        </Form.Select>\n                    <Button className=\"float-end\" type=\"submit\" variant=\"primary\">Submit</Button>\n                </Card.Body>\n            </Card>\n            </form>\n        </div>\n    </div>\n  );\n}\n\nexport default Rant;","/usr/share/caddy/learning-mongo/lesson3/front-end/src/pages/Feed.js",["139","140"],[],"import { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport axios from 'axios';\nimport './Feed.css';\n\nconst Home =() => {\n  // setup state\n  const [rants, setRants] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [problem, setProblem] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [place, setPlace] = useState(\"\");\n  const [users, setUsers] = useState([]);\n\n  const fetchRants = async() => {\n    try {      \n      const response = await axios.get(\"/api/rants\");\n      setRants(response.data.rants);\n    } catch(error) {\n      setError(\"error retrieving rants: \" + error);\n    }\n  }\n  const createRant = async() => {\n    try {\n      await axios.post(\"/api/rants\", {problem: problem, username: username, place: place});\n    } catch(error) {\n      setError(\"error adding a rant: \" + error);\n    }\n  }\n  const deleteOneRant = async(rant) => {\n    try {\n      await axios.delete(\"/api/rants/\" + rant.id);\n    } catch(error) {\n      setError(\"error deleting a rant\" + error);\n    }\n  }\n  \n  const fetchUsers = async() => {\n    try {      \n      const response = await axios.get(\"/api/users\");\n      setUsers(response.data.users);\n    } catch(error) {\n      setError(\"error retrieving users: \" + error);\n    }\n  }\n\n  // fetch ticket data\n  useEffect(() => {\n    fetchRants();\n    fetchUsers();\n  },[]);\n\n  const addRant = async(e) => {\n    e.preventDefault();\n    await createRant();\n    fetchRants();\n    setProblem(\"\");\n    setUsername(\"\");\n    setPlace(\"\");\n  }\n\n  const deleteRant = async(rant) => {\n    await deleteOneRant(rant);\n    fetchRants();\n  }\n\n  // render results\n  return (\n    <div className=\"container\">\n        <div className=\"App\">\n            {error}\n            <h1>Feed</h1>\n          \n            {rants.map( rant => (\n                <Card key={rant.id} className=\"rant\">\n                  <Card.Header>{rant.username}</Card.Header>\n                  <Card.Body>\n                    <Card.Text>\n                      {rant.problem}\n                    </Card.Text>\n                    <Button className=\"float-end\" variant=\"primary\" onClick={e => deleteRant(rant)}>Delete</Button>\n                  </Card.Body>\n                </Card>\n            ))}\n        </div>\n    </div>\n  );\n}\n\nexport default Home;\n","/usr/share/caddy/learning-mongo/lesson3/front-end/src/pages/Users.js",[],[],"/usr/share/caddy/Creative-Project-4/front-end/src/index.js",[],[],[],"/usr/share/caddy/Creative-Project-4/front-end/src/App.js",["141"],[],"/usr/share/caddy/Creative-Project-4/front-end/src/reportWebVitals.js",[],[],"/usr/share/caddy/Creative-Project-4/front-end/src/pages/Layout.js",[],[],"/usr/share/caddy/Creative-Project-4/front-end/src/pages/Feed.js",["142","143"],[],"import { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport axios from 'axios';\nimport Footer from './Footer.js'\nimport './Feed.css';\n\nconst Home =() => {\n  // setup state\n  const [rants, setRants] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [problem, setProblem] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [place, setPlace] = useState(\"\");\n  const [users, setUsers] = useState([]);\n\n  const fetchRants = async() => {\n    try {      \n      const response = await axios.get(\"/api/rants\");\n      setRants(response.data.rants);\n    } catch(error) {\n      setError(\"error retrieving rants: \" + error);\n    }\n  }\n  const createRant = async() => {\n    try {\n      await axios.post(\"/api/rants\", {problem: problem, username: username, place: place});\n    } catch(error) {\n      setError(\"error adding a rant: \" + error);\n    }\n  }\n  const deleteOneRant = async(rant) => {\n    console.log(\"in the delete one rant method in the front end\")\n    try {\n      await axios.delete(\"/api/rants/\" + rant.id);\n    } catch(error) {\n      setError(\"error deleting a rant\" + error);\n    }\n  }\n  \n  const fetchUsers = async() => {\n    try {      \n      const response = await axios.get(\"/api/users\");\n      setUsers(response.data.users);\n    } catch(error) {\n      setError(\"error retrieving users: \" + error);\n    }\n  }\n\n  // fetch ticket data\n  useEffect(() => {\n    fetchRants();\n    fetchUsers();\n  },[]);\n\n  const addRant = async(e) => {\n    e.preventDefault();\n    await createRant();\n    fetchRants();\n    setProblem(\"\");\n    setUsername(\"\");\n    setPlace(\"\");\n  }\n\n  const deleteRant = async(rant) => {\n    console.log(\"in the front end delete rant method\")\n    await deleteOneRant(rant);\n    fetchRants();\n  }\n\n  // render results\n  return (\n    <>\n    <div className=\"container\">\n        <div className=\"App\">\n            {error}\n            <h1>Feed</h1>\n          \n            {rants.map( rant => (\n                <Card key={rant.id} className=\"rant\">\n                  <Card.Header>{rant.username}</Card.Header>\n                  <Card.Body>\n                    <Card.Text>\n                      {rant.problem}\n                    </Card.Text>\n                    <Button className=\"float-end\" variant=\"primary\" onClick={e => deleteRant(rant)}>Delete</Button>\n                  </Card.Body>\n                </Card>\n            ))}\n        </div>\n    </div>\n    <Footer/>\n    </>\n  );\n}\n\nexport default Home;\n","/usr/share/caddy/Creative-Project-4/front-end/src/pages/Rant.js",["144","145"],[],"import { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport axios from 'axios';\nimport Footer from './Footer.js'\nimport './Rant.css';\n\nconst Rant =() => {\n  // setup state\n  const [rants, setRants] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [problem, setProblem] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [place, setPlace] = useState(\"\");\n  const [users, setUsers] = useState([]);\n\n  const fetchRants = async() => {\n    try {      \n      const response = await axios.get(\"/api/rants\");\n      setRants(response.data.rants);\n    } catch(error) {\n      setError(\"error retrieving rants: \" + error);\n    }\n  }\n  const createRant = async() => {\n    try {\n      await axios.post(\"/api/rants\", {problem: problem, username: username, place: place});\n    } catch(error) {\n      setError(\"error adding a rant: \" + error);\n    }\n  }\n  const deleteOneRant = async(rant) => {\n    try {\n      await axios.delete(\"/api/rants/\" + rant.id);\n    } catch(error) {\n      setError(\"error deleting a rant\" + error);\n    }\n  }\n  \n  const fetchUsers = async() => {\n    try {      \n      const response = await axios.get(\"/api/users\");\n      setUsers(response.data.users);\n    } catch(error) {\n      setError(\"error retrieving users: \" + error);\n    }\n  }\n\n  // fetch ticket data\n  useEffect(() => {\n    fetchRants();\n    fetchUsers();\n  },[]);\n\n  const addRant = async(e) => {\n    e.preventDefault();\n    await createRant();\n    fetchRants();\n    setProblem(\"\");\n    setUsername(\"\");\n    setPlace(\"\");\n  }\n\n  const deleteRant = async(rant) => {\n    await deleteOneRant(rant);\n    fetchRants();\n  }\n\n  // render results\n  return (\n    <>\n    <div className=\"container\">\n        <div className=\"App\">\n            {error}\n            <h1>Create a Rant</h1>\n            <form onSubmit={addRant}>\n            <Card>\n                <Card.Header>Rant</Card.Header>\n                <Card.Body>\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                            <Form.Control as=\"textarea\" rows={3}  value={problem} onChange={e=>setProblem(e.target.value)}/>\n                        </Form.Group>\n                        <Form.Select aria-label=\"Default select example\" onChange={e=>setUsername(e.target.value)}>\n                          <option>Select User</option>\n                          {users.map( user => (\n                            <option value={user.username}>{user.username}</option>\n                          ))}\n                        </Form.Select>\n                    <Button className=\"float-end\" type=\"submit\" variant=\"primary\">Submit</Button>\n                </Card.Body>\n            </Card>\n            </form>\n        </div>\n    </div>\n    <Footer/>\n    </>\n  );\n}\n\nexport default Rant;","/usr/share/caddy/Creative-Project-4/front-end/src/pages/Users.js",[],[],"/usr/share/caddy/Creative-Project-4/front-end/src/pages/Footer.js",[],[],"/usr/share/caddy/Creative-Project-5/front-end/src/index.js",[],[],"/usr/share/caddy/Creative-Project-5/front-end/src/App.js",["146"],[],"/usr/share/caddy/Creative-Project-5/front-end/src/reportWebVitals.js",[],[],"/usr/share/caddy/Creative-Project-5/front-end/src/pages/Layout.js",[],[],"/usr/share/caddy/Creative-Project-5/front-end/src/pages/Feed.js",["147","148"],[],"/usr/share/caddy/Creative-Project-5/front-end/src/pages/Rant.js",["149","150"],[],"/usr/share/caddy/Creative-Project-5/front-end/src/pages/Users.js",[],[],"/usr/share/caddy/Creative-Project-5/front-end/src/pages/Footer.js",[],[],"/usr/share/caddy/Creative-Project-5/front-end/src/pages/Home.js",[],[],"/usr/share/caddy/Creative-Project-5/front-end/src/pages/Reservations.js",["151","152","153"],[],{"ruleId":"154","severity":1,"message":"155","line":2,"column":8,"nodeType":"156","messageId":"157","endLine":2,"endColumn":16},{"ruleId":"154","severity":1,"message":"158","line":10,"column":10,"nodeType":"156","messageId":"157","endLine":10,"endColumn":15},{"ruleId":"154","severity":1,"message":"159","line":64,"column":9,"nodeType":"156","messageId":"157","endLine":64,"endColumn":19},{"ruleId":"154","severity":1,"message":"160","line":14,"column":10,"nodeType":"156","messageId":"157","endLine":14,"endColumn":15},{"ruleId":"154","severity":1,"message":"161","line":54,"column":9,"nodeType":"156","messageId":"157","endLine":54,"endColumn":16},{"ruleId":"154","severity":1,"message":"155","line":2,"column":8,"nodeType":"156","messageId":"157","endLine":2,"endColumn":16},{"ruleId":"154","severity":1,"message":"160","line":15,"column":10,"nodeType":"156","messageId":"157","endLine":15,"endColumn":15},{"ruleId":"154","severity":1,"message":"161","line":56,"column":9,"nodeType":"156","messageId":"157","endLine":56,"endColumn":16},{"ruleId":"154","severity":1,"message":"158","line":11,"column":10,"nodeType":"156","messageId":"157","endLine":11,"endColumn":15},{"ruleId":"154","severity":1,"message":"159","line":65,"column":9,"nodeType":"156","messageId":"157","endLine":65,"endColumn":19},{"ruleId":"154","severity":1,"message":"155","line":2,"column":8,"nodeType":"156","messageId":"157","endLine":2,"endColumn":16},{"ruleId":"154","severity":1,"message":"160","line":15,"column":10,"nodeType":"156","messageId":"157","endLine":15,"endColumn":15},{"ruleId":"154","severity":1,"message":"161","line":56,"column":9,"nodeType":"156","messageId":"157","endLine":56,"endColumn":16},{"ruleId":"154","severity":1,"message":"158","line":11,"column":10,"nodeType":"156","messageId":"157","endLine":11,"endColumn":15},{"ruleId":"154","severity":1,"message":"159","line":65,"column":9,"nodeType":"156","messageId":"157","endLine":65,"endColumn":19},{"ruleId":"154","severity":1,"message":"162","line":7,"column":20,"nodeType":"156","messageId":"157","endLine":7,"endColumn":29},{"ruleId":"154","severity":1,"message":"163","line":12,"column":12,"nodeType":"156","messageId":"157","endLine":12,"endColumn":24},{"ruleId":"154","severity":1,"message":"164","line":12,"column":26,"nodeType":"156","messageId":"157","endLine":12,"endColumn":41},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'rants' is assigned a value but never used.","'deleteRant' is assigned a value but never used.","'users' is assigned a value but never used.","'addRant' is assigned a value but never used.","'useEffect' is defined but never used.","'reservations' is assigned a value but never used.","'setReservations' is assigned a value but never used."]